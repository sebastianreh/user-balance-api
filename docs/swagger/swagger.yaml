basePath: /user-balance-api/
definitions:
  balance.UserBalance:
    properties:
      balance:
        type: number
      total_credits:
        type: integer
      total_debits:
        type: integer
    type: object
  exceptions.BadRequestException:
    properties:
      code:
        default: 400
        type: integer
      error:
        default: error message
        type: string
    type: object
  exceptions.DuplicatedException:
    properties:
      code:
        default: 409
        type: integer
      error:
        default: error message
        type: string
    type: object
  exceptions.InternalServerException:
    properties:
      code:
        default: 500
        type: integer
      error:
        default: error message
        type: string
    type: object
  exceptions.NotFoundException:
    properties:
      code:
        default: 404
        type: integer
      error:
        default: error message
        type: string
    type: object
  transaction.Transaction:
    properties:
      amount:
        type: number
      date_time:
        type: string
      id:
        type: string
      user_id:
        type: string
    type: object
  user.CreationResponse:
    properties:
      user_id:
        type: string
    type: object
  user.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API documentation for the User Balance service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User Balance API
  version: 0.0.1
paths:
  /transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a transaction by its ID, marking it as deleted
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Invalid request or business rule violation
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Delete a transaction by ID
      tags:
      - transactions
    get:
      consumes:
      - application/json
      description: Retrieve transaction details by its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: '#/definitions/transaction.Transaction'
        "400":
          description: Invalid request or business rule violation
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Get a transaction by ID
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update an existing transaction by ID with new data such as amount
        and datetime
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Transaction Request Body
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/transaction.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Invalid request or business rule violation
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Update an existing transaction
      tags:
      - transactions
  /transactions/create:
    post:
      consumes:
      - application/json
      description: Create a new transaction for a user with a specified amount and
        datetime
      parameters:
      - description: Transaction Request Body
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/transaction.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: No Content
        "400":
          description: Invalid request or business rule violation
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "409":
          description: Transaction already exists
          schema:
            $ref: '#/definitions/exceptions.DuplicatedException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Create a new transaction
      tags:
      - transactions
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a user by marking them as deleted
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Invalid request or missing user ID
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieves a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Invalid request or missing user ID
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates user details such as first name, last name, and email
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid request or missing user ID
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Update an existing user
      tags:
      - users
  /users/{user_id}/balance:
    get:
      description: Get the balance of a user.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Start date in ISO8601 format (YYYY-MM-DDThh:mm:ssZ)
        in: query
        name: from
        type: string
      - description: End date in ISO8601 format (YYYY-MM-DDThh:mm:ssZ)
        in: query
        name: to
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/balance.UserBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/exceptions.NotFoundException'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Get user balance with optional date filters
      tags:
      - balances
  /users/create:
    post:
      consumes:
      - application/json
      description: Creates a new user by providing first name, last name, and email
      parameters:
      - description: User Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully with the user_id
          schema:
            $ref: '#/definitions/user.CreationResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/exceptions.BadRequestException'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/exceptions.InternalServerException'
      summary: Create a new user
      tags:
      - users
swagger: "2.0"
