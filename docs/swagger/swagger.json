{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the User Balance service.",
        "title": "User Balance API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "host": "localhost:8000",
    "basePath": "/user-balance-api/",
    "paths": {
        "/transactions/create": {
            "post": {
                "description": "Create a new transaction for a user with a specified amount and datetime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction Request Body",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request or business rule violation",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "409": {
                        "description": "Transaction already exists",
                        "schema": {
                            "$ref": "#/definitions/exceptions.DuplicatedException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "description": "Retrieve transaction details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/transaction.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid request or business rule violation",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing transaction by ID with new data such as amount and datetime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update an existing transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Request Body",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request or business rule violation",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            },
            "delete": {
                "description": "Soft delete a transaction by its ID, marking it as deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request or business rule violation",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "description": "Creates a new user by providing first name, last name, and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully with the user_id",
                        "schema": {
                            "$ref": "#/definitions/user.CreationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves a user's details by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing user ID",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates user details such as first name, last name, and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid request or missing user ID",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            },
            "delete": {
                "description": "Soft delete a user by marking them as deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request or missing user ID",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/balance": {
            "get": {
                "description": "Get the balance of a user.",
                "tags": [
                    "balances"
                ],
                "summary": "Get user balance with optional date filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date in ISO8601 format (YYYY-MM-DDThh:mm:ssZ)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date in ISO8601 format (YYYY-MM-DDThh:mm:ssZ)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.UserBalance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exceptions.BadRequestException"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exceptions.NotFoundException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exceptions.InternalServerException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "balance.UserBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "total_credits": {
                    "type": "integer"
                },
                "total_debits": {
                    "type": "integer"
                }
            }
        },
        "exceptions.BadRequestException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 400
                },
                "error": {
                    "type": "string",
                    "default": "error message"
                }
            }
        },
        "exceptions.DuplicatedException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 409
                },
                "error": {
                    "type": "string",
                    "default": "error message"
                }
            }
        },
        "exceptions.InternalServerException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 500
                },
                "error": {
                    "type": "string",
                    "default": "error message"
                }
            }
        },
        "exceptions.NotFoundException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 404
                },
                "error": {
                    "type": "string",
                    "default": "error message"
                }
            }
        },
        "transaction.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.CreationResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    }
}